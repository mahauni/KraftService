DROP SEQUENCE esg_sequence;
DROP SEQUENCE problema_sequence;
DROP SEQUENCE pessoa_sequence;
DROP SEQUENCE local_sequence;
DROP SEQUENCE acao_sequence;
DROP SEQUENCE departamento_sequence;
DROP TRIGGER tr_insert_id_esg;
DROP TRIGGER tr_insert_id_problema;
DROP TRIGGER tr_insert_id_pessoa;
DROP TRIGGER tr_insert_id_local;
DROP TRIGGER tr_insert_id_acao;
DROP TRIGGER tr_insert_id_departamento;
DROP TABLE ESG;
DROP TABLE PROBLEMAS;
DROP TABLE PESSOAS;
DROP TABLE LOCAIS;
DROP TABLE PERFIS;
DROP TABLE SOLUCOES;
DROP TABLE ACOES;
DROP TABLE RESPONSABILIDADES;
DROP TABLE DEPARTAMENTOS;

CREATE TABLE ESG (
    ID_ESG integer NOT NULL CONSTRAINT esg_id_pk PRIMARY KEY,
    NOME_ESG varchar(20) NOT NULL,
    DESCRICAO varchar(20) NOT NULL
);

CREATE SEQUENCE esg_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_esg
BEFORE INSERT ON ESG FOR EACH ROW
BEGIN

SELECT esg_sequence.NEXTVAL
INTO :NEW.ID_ESG
FROM DUAL;
END;
/

CREATE TABLE PESSOAS (
    ID_PESSOA INTEGER NOT NULL CONSTRAINT pessoa_id_pk PRIMARY KEY,
    EMAIL VARCHAR(50) NOT NULL,
    TELEFONE VARCHAR(50),
    NOME_PESSOA VARCHAR(50) NOT NULL
);

CREATE SEQUENCE pessoa_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_pessoa
BEFORE INSERT ON PESSOAS FOR EACH ROW
BEGIN

SELECT pessoa_sequence.NEXTVAL
INTO :NEW.ID_PESSOA
FROM DUAL;
END;
/

CREATE TABLE LOCAIS (
    ID_LOCAL INTEGER PRIMARY KEY NOT NULL,
    NOME_LOCAL VARCHAR(50) NOT NULL
);

CREATE SEQUENCE local_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_local
BEFORE INSERT ON LOCAIS FOR EACH ROW
BEGIN

SELECT local_sequence.NEXTVAL
INTO :NEW.ID_LOCAL
FROM DUAL;
END;
/

CREATE TABLE PROBLEMAS (
    ID_PROBLEMA integer CONSTRAINT problema_id_pk PRIMARY KEY NOT NULL,
    DESCICAO varchar(200) NOT NULL,
    COMPLETO INTEGER NOT NULL,
    ID_ESG integer NOT NULL,
    ID_PESSOA integer NOT NULL,
    ID_LOCAL integer NOT NULL,
    CONSTRAINT FK_ESG FOREIGN KEY(ID_ESG) REFERENCES ESG (ID_ESG),
    CONSTRAINT FK_PESSOA FOREIGN KEY(ID_PESSOA) REFERENCES PESSOAS (ID_PESSOA),
    CONSTRAINT FK_LOCAL FOREIGN KEY(ID_LOCAL) REFERENCES LOCAIS (ID_LOCAL)
);

CREATE SEQUENCE problema_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_problema
BEFORE INSERT ON PROBLEMAS FOR EACH ROW
BEGIN

SELECT problema_sequence.NEXTVAL
INTO :NEW.ID_PROBLEMA
FROM DUAL;
END;
/

/* DONT KNOW HOW TO DO UNIQUE YET, I HOPE ITS LIKE THIS */
CREATE TABLE PERFIS (
    URL VARCHAR(100) NOT NULL CONSTRAINT perf_url_pk PRIMARY KEY,
    ID_LOCAL INTEGER NOT NULL CONSTRAINT perf_idLocal_uk UNIQUE,
    ID_PESSOA INTEGER NOT NULL,
    CONSTRAINT FK_PESSOA FOREIGN KEY(ID_PESSOA) REFERENCES PESSOAS (ID_PESSOA),
    CONSTRAINT FK_LOCAL FOREIGN KEY(ID_LOCAL) REFERENCES LOCAIS (ID_LOCAL)
);

CREATE TABLE ACOES (
    ID_ACAO INTEGER CONSTRAINT acao_id_pk PRIMARY KEY NOT NULL,
    NOME_ACAO VARCHAR(50) NOT NULL,
    DESCRICAO VARCHAR(50) NOT NULL,
    INICIO DATE,
    FIM DATE
);

CREATE SEQUENCE acao_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_acao
BEFORE INSERT ON ACOES FOR EACH ROW
BEGIN

SELECT acao_sequence.NEXTVAL
INTO :NEW.ID_ACAO
FROM DUAL;
END;
/

CREATE TABLE DEPARTAMENTOS (
    ID_DEPARTAMENTO INTEGER depart_id_pk PRIMARY KEY NOT NULL,
    NOME_DEPARTAMENTO VARCHAR(50) NOT NULL
);

CREATE SEQUENCE departamento_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_departamento
BEFORE INSERT ON DEPARTAMENTOS FOR EACH ROW
BEGIN

SELECT departamento_sequence.NEXTVAL
INTO :NEW.ID_DEPARTAMENTO
FROM DUAL;
END;
/

CREATE TABLE SOLUCOES (
    ID_ACAO INTEGER NOT NULL,
    ID_PROBLEMA INTEGER NOT NULL,
    CONSTRAINT FK_ACAO FOREIGN KEY(ID_ACAO) REFERENCES ACOES (ID_ACAO),
    CONSTRAINT FK_PROBLEMA FOREIGN KEY(ID_PROBLEMA) REFERENCES PROBLEMAS (ID_PROBLEMA)
);

CREATE TABLE RESPONSABILIDADES (
    ID_DEPARTAMENTO INTEGER NOT NULL,
    ID_ACAO INTEGER NOT NULL,
    CONSTRAINT FK_ACAO FOREIGN KEY(ID_ACAO) REFERENCES ACOES (ID_ACAO),
    CONSTRAINT FK_DEPARTAMENTO FOREIGN KEY(ID_DEPARTAMENTO) REFERENCES DEPARTAMENTOS (ID_DEPARTAMENTO)
);

COMMIT;